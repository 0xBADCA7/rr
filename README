Installation guide for rr
=========================


A) Hardware/Software requirements
---------------------------------

The current version of rr requires a Linux kernel version 2.6.39 and larger.
To enable PEBS support for the hardware performance counters (HPC) a kernel
version >= 3.0 is required. Furthermore, rr does not support x86_64. rr was
developed under Ubuntu 11.04.

rr requires two additional libraries:

(1) libpfm-4.3.0: The library can be downloaded from:
http://sourceforge.net/projects/perfmon2/files/libpfm4/libpfm-4.3.0.tar.gz/download

(2) libdisasm-dev



B) Building 
-----------

rr is developed with Eclipse CDT plugin. You can import the project directly into
Eclipse. Eclipse then generates a makefile which you can use to build the project.


C) Usage
--------

Before calling either the recorder or the replayer make sure that address space
randomization is disabled. You can do this by e.g., with the following command:

sysctl -w kernel.randomize_va_space=0

Also, we need to be able to write to /proc/$pid/mem. This can usually be
achieved with the following command:

sysctl -w kernel.yama.ptrace_scope=0

Typing rr --record /path/to/binary invokes the recorder. The recorder
creates a path in the current directory which contains the trace file(s).
To replay the application, type rr --replay /path/to/trace.  

Debug command line options:
[--dump_on=<syscall|-signal>] : dump the entire memory to file every time the system call 
numbered <syscall> is encountered or a signal numbered by <signal> is encountered. The
negation if signal is required to distingish between syscalls and signals of the same number.
example: --dump_on=79 : dumps all memory every time gettimeofday is entered. --dump_on=-17: 
dumps all memory every time  signal SIGCHLD is recieved.
[--dump_at=<time>] : dump the entire memory at global time <time>
[--checksum={on-syscalls,on-all-events}|<from-time>] : For record: calculated a checksum 
of the entire memory either on every event (on-all-events) or on every syscall (on-syscalls) 
or starting from global time <from-time>. Fore replay: verifies the calculated checksums,
should be run with same arguments as the record.

Note that talking to particular kernel drivers (by ioctl(...)) requires the
rr to have knowledge about what the driver is doing. For example, if you
record GUI applications that make use a grapphics driver with 3d-support
rr will fail.

